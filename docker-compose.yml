services:

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: web-container
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - app_network
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_USER=${DB_USER:-root}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME:-subscription_db}
      - DB_PORT=3306
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: mysql:8.0
    restart: always
    container_name: db-container
    environment:
      MYSQL_DATABASE: ${DB_NAME:-subscription_db}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USER:-app_user}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  db_data:
    name: ${VOLUME_NAME:-weather_db_data}

networks:
  app_network:
    driver: bridge
    name: ${NETWORK_NAME:-weather_network}